
<project name="RPN" default="all" basedir="..">
    
    <!-- set global properties for this build -->
    <property environment="env"/>
    <!-- <property name="hosttype" value="${env.RPHOSTTYPE}"/> -->
    <!-- global properties does not work - set "environment" variables locally -->
    <property name="hosttype" value="PRE_CONFIG_HOSTTYPE"/>

    <property name="srcdir"   location="${basedir}/src"/>
    <property name="libdir"   location="${basedir}/lib"/>
    <property name="docdir"   location="${basedir}/doc"/>
    <property name="bindir"   location="${basedir}/bin"/>
    <property name="makedir"  location="${srcdir}/make"/>
    <property name="build"    location="${libdir}/build"/>
    <property name="classdir" location="${build}/classes"/>
    <property name="webdir"   location="${srcdir}/conf"/>
    <property name="depdir"   location="${build}/depcache"/>
    <property name="libc++dir" location="${libdir}/${hosttype}"/>
    <property name="plugindir" location="${libc++dir}/plugins"/>


    <target name="all" depends="compile-java,compile-c++"/>
    
    <target name="init">
        <tstamp/>
        <mkdir dir="${classdir}"/>
        <mkdir dir="${depdir}"/>
        <mkdir dir="${libc++dir}"/>
        <mkdir dir="${plugindir}"/>
    </target>
    
    <!-- Compile java source -->
    <target name="compile-java" depends="init" description="Compile java source code" >
        <depend srcdir="${srcdir}" destdir="${classdir}" cache="${depdir}" closure="yes"/>

        <javac  encoding="utf8" deprecation="off" debug="true" source="1.6" target="1.6"
                classpath="${libdir}/log4j.jar:${libdir}/javaee-api-6.0.jar:${libdir}/jbossall-client.jar:${libdir}/vecmath.jar:${libdir}/pdflibdir.jar:${libdir}/xml4j.jar:${libdir}/jlapack-0.6.jar:${classdir}:${libdir}/msv.jar:${libdir}/iso-relax.jar:${libdir}/batik-awt-util.jar:${libdir}/batik-util.jar:${libdir}/batik-dom.jar:${libdir}/batik-xml.jar:${libdir}/batik-ext.jar:${libdir}/batik-svg-dom.jar:${libdir}/batik-svggen.jar"
                srcdir="${srcdir}" sourcepath="${srcdir}" destdir="${classdir}">
        </javac>
        
        <jar destfile="${libdir}/rpn.jar" basedir="${classdir}">
            <manifest>
                <attribute name="Main-Class" value="rpn/RPnDesktopPlotter"/>
                <attribute name="Class-path" value="./vecmath.jar ./log4j.jar ./jbossall-client.jar \
			./pdflib.jar ./xml4j.jar ./jlapack-0.6.jar ./msv.jar ./iso-relax.jar \
			./batik-awt-util.jar ./batik-util.jar ./batik-dom.jar ./batik-xml.jar ./batik-ext.jar ./batik-svg-dom.jar ./batik-svggen.jar "/>
            </manifest>
        </jar>
        <jar destfile="${libdir}/rpnbatch.jar" basedir="${classdir}">
            <manifest>
                <attribute name="Main-Class" value="rpn/RPnBatchRun"/>
                <attribute name="Class-path" value="./vecmath.jar ./log4j.jar ./jbossall-client.jar \
			./pdflib.jar ./xml4j.jar ./jlapack-0.6.jar ./msv.jar ./iso-relax.jar \
			./batik-awt-util.jar ./batik-util.jar ./batik-dom.jar ./batik-xml.jar ./batik-ext.jar ./batik-svg-dom.jar ./batik-svggen.jar "/>
            </manifest>
        </jar>
	<war destfile="${libdir}/rpnmediatorproxy.war" basedir="${classdir}" webxml="${webdir}/web.xml">
            <manifest>
                <attribute name="Class-path" value="./vecmath.jar ./log4j.jar ./jbossall-client.jar \
			./pdflib.jar ./xml4j.jar ./jlapack-0.6.jar ./msv.jar ./iso-relax.jar \
			./batik-awt-util.jar ./batik-util.jar ./batik-dom.jar ./batik-xml.jar ./batik-ext.jar ./batik-svg-dom.jar ./batik-svggen.jar "/>
            </manifest>
	</war>	
    </target>
    
    <!-- Compile C++ source -->
    <target name="compile-c++" depends="init" description="Compile C++ source code" >
        <exec executable="make" dir="${srcdir}">
            <arg line ="-f  make/makefile RPGNU=yes RPHOSTTYPE=${hosttype}"/>
        </exec>
    </target>

    <target name="doc" depends="compile-java" description="All packages html documentation">
        <javadoc  destdir="${docdir}" classpath="${classdir}" >
            <packageset dir="${srcdir}" defaultexcludes="yes">
                <include name="rpn/**" />
                <include name="rpnumerics/**" />
                <include name="wave/**" />
                <include name="salvo/**" />
            </packageset>
        </javadoc>
    </target>
    
    <target name="rpndoc" depends="compile-java" description="RPn package html documentation">
        <javadoc  destdir="${docdir}" classpath="${classdir}" >
            <packageset dir="${srcdir}" defaultexcludes="yes">
                <include name="rpn/**" />
            </packageset>
        </javadoc>
    </target>
    
    <target name="multiddoc" depends="compile-java" description="Multid package html documentation">
        <javadoc  destdir="${docdir}" classpath="${classdir}" >
            <packageset dir="${srcdir}" defaultexcludes="yes">
                <include name="wave/multid/**" />
            </packageset>
        </javadoc>
    </target>
    
    <!-- Compile C++ plugins -->
    <target name="compile-plugins" depends="compile-c++" description="compile C++ plugins" >
        <exec executable="make" dir="${srcdir}">
            <arg line ="-f  plugins/makefile RPGNU=yes"/>
        </exec>
        <copy  todir="${plugindir}">
            <fileset dir="${basedir}/share/plugins/">
                <filename name="**/*.xml"/>
            </fileset>
        </copy>
    </target>

    <!-- clean up java classes, jar, C++ objects and libraries -->
    <target name="clean" depends="clean-java,clean-c++" description="clean up java and C++ objects"/>

    <target name="clean-java" description="clean up java classes" >
        <delete dir="${classdir}"/>
        <delete dir="${depdir}"/>
        <delete dir="${build}"/>
        <delete file="${libdir}/rpn.jar"/>
    </target>
       
    <target name="clean-c++" description="clean up C++ object" >
        <exec executable="make" dir="${srcdir}">
            <arg line ="-f  make/makefile clean"/>
        </exec>
        <delete dir="${libc++dir}"/>
    </target>


    <!--
    <target name="run" depends="compile-java,compile-c++,compile-plugins" description="Runs the program" >
    -->
    <target name="run" description="Runs the program" >
        <property name="run.class" value="rpn.RPnDesktopPlotter"/>

        <path id="run.classpath">
            <pathelement path="${libdir}/rpn.jar"/>
        </path>

        <!-- this path tag is not necessary !
        <path id="run.endorsed.dir">
            <fileset dir="${libdir}">
                <include name="*.jar"/>
            </fileset>
        </path> -->

        <java classpathref="run.classpath"
            classname="${run.class}"
            dir="${srcdir}"
            fork="true">

            <sysproperty key="java.library.path" path="${libdir}/${hosttype}"/>
            <sysproperty key="rpnhome" path="${basedir}"/>
            <sysproperty key="RPHOSTTYPE" value="${hosttype}"/>
            <jvmarg value="-Xmx256m"/>
            <arg value="${basedir}/in/triphase.xml"/>


        </java>
    </target>

    <target name="debug" depends="compile-java,compile-c++,compile-plugins" description="Runs the programm" >
        <property name="run.class" value="rpn.RPnDesktopPlotter"/>

        <path id="run.classpath">
            <pathelement path="${libdir}/rpn.jar"/>
        </path>

        <!-- this path tag is not necessary !
        <path id="run.endorsed.dir">
            <fileset dir="${libdir}">
                <include name="*.jar"/>
            </fileset>
        </path> -->

        <nbjpdastart addressproperty="jpda.address" name="RPn_Java" transport="dt_socket"/>
        <java classpathref="run.classpath"
            classname="${run.class}"
            dir="${srcdir}"
            fork="true">

            <sysproperty key="java.library.path" path="${libdir}/${hosttype}"/>
            <sysproperty key="rpnhome" path="${basedir}"/>
            <sysproperty key="RPHOSTTYPE" value="${hosttype}"/>
            <jvmarg value="-Xmx256m"/>
            <jvmarg value="-Xdebug"/>
            <jvmarg value="-Xrunjdwp:transport=dt_socket,address=${jpda.address}"/>

          <arg value="${basedir}/in/quad2.xml"/>
        </java>
    </target>


    <!-- TODO: Create C++ code compilation here.

    <property name="linuxinclude"   value="${env.JAVA_HOME}/include/linux"/>
    <property name="solarisinclude" value="${env.JAVA_HOME}/include/solaris"/>

    <exec executable="gcc">
    <arg line="-c -I${basedir}/${native}/Quad2C/ -I${env.JAVA_HOME}/include -I${linuxinclude} \
		-I${include} ${JNI}/JNIWaveFlow.c -o ${JNI}/JNIWaveFlow.o" >
    </arg>
    </exec> 

    <exec executable="gcc" >
    <arg line="-c -Wall -I${basedir}/${native}/Steam -I${env.JAVA_HOME}/include -I${linuxinclude} \
		-I${include} ${JNI}/JNIVectorFunction.c -o ${JNI}/JNIVectorFunction.o" >
    </arg>
    </exec>

    <exec executable="gcc" >
    <arg line="-c -DMCD_VERBOSE -D_MCD_CHECK -I${basedir}/${native}/Quad2C/ \
		-I${env.JAVA_HOME}/include -I${linuxinclude} -I${include} \
		${JNI}/JNIWaveFlow.c  -o ${JNI}/JNIWaveFlow.o" >
    </arg>
    </exec>
    -->
    
</project>
